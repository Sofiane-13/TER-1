/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.validation

import org.eclipse.xtext.validation.Check
import org.xtext.example.mydsl.myDsl.Component
import org.xtext.example.mydsl.myDsl.Variable
import org.xtext.example.mydsl1.services.MyDslGrammarAccess.DomainDeclarationElements
import org.xtext.example.mydsl.myDsl.MyDslPackage
import org.xtext.example.mydsl.myDsl.Mapping

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MyDslValidator extends AbstractMyDslValidator {

	//if(!(compo.nameVarMode).type.equals((compo.nameVarTest as Variable).type))

 
	@Check
	def checkMappingSameType(Mapping map) {
		var x=0;
		for(varmod:map.nameVarMode){
			if(!((varmod.type.literal).equals(map.nameVarTest.get(x).type.literal))){
				error("the variables must have the same Type",MyDslPackage.Literals.MAPPING__NAME_VAR_MODE)
			}
			x++
		}
	}
	
}
