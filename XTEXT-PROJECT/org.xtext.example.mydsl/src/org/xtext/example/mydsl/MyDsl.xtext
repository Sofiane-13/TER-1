grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

import "http://www.xtext.org/example/mydsl1/MyDsl" as def

Model:
	function+=AbstractModel*;



AbstractModel:Import (comp+=Component )+ ;

Import:
    'import' importedNamespace=QualifiedNameWithWildcard;
    
QualifiedNameWithWildcard:
    QualifiedName '.*'?;
        
QualifiedName:
    ID ('.' ID)*;
Component :
	
	("Component" | "Mock" | "Observator")":" 
	inst+=InstanceComp":" name=ID
	"ProvidedServices:"
	"conf("(arg+=Variable ",")*arg1+=Variable")"
	(methode+=ServiceName "("((arg+=Variable ",")*arg+=Variable)*")"(":"arg+=Variable)?)*
    "RequiredServices:"?
    (req+=RequiredService)*
	(map+=Mapping)*
	(bind+=Bindings)*
;
InstanceComp:
	name=ID
;

Variable:
      name=ID ":" type=Type;
      
Mapping :
	 'varModel:' nameVarMode+=[Variable] 'ref' 'varTest:' nameVarTest+=[def::Variable]
;

Bindings :
	"bind(" nameComp+=[InstanceComp]'.'nameServ1+=[ServiceName] "," nameComp+=[InstanceComp]'.'nameServ2+=[ServiceName] ")";
	  
RequiredService:
		 
		nameVarMethode+=Variable":="nameComp+=[InstanceComp]'.'nameServ+=[ServiceName]";";
	  

ServiceName : name=ID;


      
enum Type : INT | STRING | Boolean | Double;