/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package com.aelos.xtext.mappingassistance.mappingAssistance.impl;

import com.aelos.xtext.architecture.architecture.Operation;
import com.aelos.xtext.architecture.architecture.Variable;

import com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage;
import com.aelos.xtext.mappingassistance.mappingAssistance.Observer;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Observer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getService1 <em>Service1</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getMember1 <em>Member1</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getInstVar <em>Inst Var</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getVarOp <em>Var Op</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getService2 <em>Service2</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.impl.ObserverImpl#getMember2 <em>Member2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObserverImpl extends MinimalEObjectImpl.Container implements Observer
{
  /**
   * The cached value of the '{@link #getService1() <em>Service1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService1()
   * @generated
   * @ordered
   */
  protected Variable service1;

  /**
   * The cached value of the '{@link #getMember1() <em>Member1</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMember1()
   * @generated
   * @ordered
   */
  protected Operation member1;

  /**
   * The cached value of the '{@link #getInstVar() <em>Inst Var</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstVar()
   * @generated
   * @ordered
   */
  protected EList<com.aelos.xtext.testintentionsassistance.testintentionsAssistance.Variable> instVar;

  /**
   * The cached value of the '{@link #getVarOp() <em>Var Op</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarOp()
   * @generated
   * @ordered
   */
  protected EList<Variable> varOp;

  /**
   * The cached value of the '{@link #getService2() <em>Service2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getService2()
   * @generated
   * @ordered
   */
  protected Variable service2;

  /**
   * The cached value of the '{@link #getMember2() <em>Member2</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMember2()
   * @generated
   * @ordered
   */
  protected Operation member2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObserverImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MappingAssistancePackage.Literals.OBSERVER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable getService1()
  {
    if (service1 != null && service1.eIsProxy())
    {
      InternalEObject oldService1 = (InternalEObject)service1;
      service1 = (Variable)eResolveProxy(oldService1);
      if (service1 != oldService1)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MappingAssistancePackage.OBSERVER__SERVICE1, oldService1, service1));
      }
    }
    return service1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable basicGetService1()
  {
    return service1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setService1(Variable newService1)
  {
    Variable oldService1 = service1;
    service1 = newService1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingAssistancePackage.OBSERVER__SERVICE1, oldService1, service1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operation getMember1()
  {
    if (member1 != null && member1.eIsProxy())
    {
      InternalEObject oldMember1 = (InternalEObject)member1;
      member1 = (Operation)eResolveProxy(oldMember1);
      if (member1 != oldMember1)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MappingAssistancePackage.OBSERVER__MEMBER1, oldMember1, member1));
      }
    }
    return member1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operation basicGetMember1()
  {
    return member1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMember1(Operation newMember1)
  {
    Operation oldMember1 = member1;
    member1 = newMember1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingAssistancePackage.OBSERVER__MEMBER1, oldMember1, member1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<com.aelos.xtext.testintentionsassistance.testintentionsAssistance.Variable> getInstVar()
  {
    if (instVar == null)
    {
      instVar = new EObjectResolvingEList<com.aelos.xtext.testintentionsassistance.testintentionsAssistance.Variable>(com.aelos.xtext.testintentionsassistance.testintentionsAssistance.Variable.class, this, MappingAssistancePackage.OBSERVER__INST_VAR);
    }
    return instVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getVarOp()
  {
    if (varOp == null)
    {
      varOp = new EObjectResolvingEList<Variable>(Variable.class, this, MappingAssistancePackage.OBSERVER__VAR_OP);
    }
    return varOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable getService2()
  {
    if (service2 != null && service2.eIsProxy())
    {
      InternalEObject oldService2 = (InternalEObject)service2;
      service2 = (Variable)eResolveProxy(oldService2);
      if (service2 != oldService2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MappingAssistancePackage.OBSERVER__SERVICE2, oldService2, service2));
      }
    }
    return service2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable basicGetService2()
  {
    return service2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setService2(Variable newService2)
  {
    Variable oldService2 = service2;
    service2 = newService2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingAssistancePackage.OBSERVER__SERVICE2, oldService2, service2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operation getMember2()
  {
    if (member2 != null && member2.eIsProxy())
    {
      InternalEObject oldMember2 = (InternalEObject)member2;
      member2 = (Operation)eResolveProxy(oldMember2);
      if (member2 != oldMember2)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MappingAssistancePackage.OBSERVER__MEMBER2, oldMember2, member2));
      }
    }
    return member2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operation basicGetMember2()
  {
    return member2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMember2(Operation newMember2)
  {
    Operation oldMember2 = member2;
    member2 = newMember2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingAssistancePackage.OBSERVER__MEMBER2, oldMember2, member2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MappingAssistancePackage.OBSERVER__SERVICE1:
        if (resolve) return getService1();
        return basicGetService1();
      case MappingAssistancePackage.OBSERVER__MEMBER1:
        if (resolve) return getMember1();
        return basicGetMember1();
      case MappingAssistancePackage.OBSERVER__INST_VAR:
        return getInstVar();
      case MappingAssistancePackage.OBSERVER__VAR_OP:
        return getVarOp();
      case MappingAssistancePackage.OBSERVER__SERVICE2:
        if (resolve) return getService2();
        return basicGetService2();
      case MappingAssistancePackage.OBSERVER__MEMBER2:
        if (resolve) return getMember2();
        return basicGetMember2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MappingAssistancePackage.OBSERVER__SERVICE1:
        setService1((Variable)newValue);
        return;
      case MappingAssistancePackage.OBSERVER__MEMBER1:
        setMember1((Operation)newValue);
        return;
      case MappingAssistancePackage.OBSERVER__INST_VAR:
        getInstVar().clear();
        getInstVar().addAll((Collection<? extends com.aelos.xtext.testintentionsassistance.testintentionsAssistance.Variable>)newValue);
        return;
      case MappingAssistancePackage.OBSERVER__VAR_OP:
        getVarOp().clear();
        getVarOp().addAll((Collection<? extends Variable>)newValue);
        return;
      case MappingAssistancePackage.OBSERVER__SERVICE2:
        setService2((Variable)newValue);
        return;
      case MappingAssistancePackage.OBSERVER__MEMBER2:
        setMember2((Operation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MappingAssistancePackage.OBSERVER__SERVICE1:
        setService1((Variable)null);
        return;
      case MappingAssistancePackage.OBSERVER__MEMBER1:
        setMember1((Operation)null);
        return;
      case MappingAssistancePackage.OBSERVER__INST_VAR:
        getInstVar().clear();
        return;
      case MappingAssistancePackage.OBSERVER__VAR_OP:
        getVarOp().clear();
        return;
      case MappingAssistancePackage.OBSERVER__SERVICE2:
        setService2((Variable)null);
        return;
      case MappingAssistancePackage.OBSERVER__MEMBER2:
        setMember2((Operation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MappingAssistancePackage.OBSERVER__SERVICE1:
        return service1 != null;
      case MappingAssistancePackage.OBSERVER__MEMBER1:
        return member1 != null;
      case MappingAssistancePackage.OBSERVER__INST_VAR:
        return instVar != null && !instVar.isEmpty();
      case MappingAssistancePackage.OBSERVER__VAR_OP:
        return varOp != null && !varOp.isEmpty();
      case MappingAssistancePackage.OBSERVER__SERVICE2:
        return service2 != null;
      case MappingAssistancePackage.OBSERVER__MEMBER2:
        return member2 != null;
    }
    return super.eIsSet(featureID);
  }

} //ObserverImpl
