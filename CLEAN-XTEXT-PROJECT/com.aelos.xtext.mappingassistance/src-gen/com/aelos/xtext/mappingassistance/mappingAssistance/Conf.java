/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package com.aelos.xtext.mappingassistance.mappingAssistance;

import com.aelos.xtext.architecture.architecture.Operation;
import com.aelos.xtext.architecture.architecture.Variable;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Conf</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getService <em>Service</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getMember <em>Member</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getVarConf <em>Var Conf</em>}</li>
 *   <li>{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getInstVar <em>Inst Var</em>}</li>
 * </ul>
 *
 * @see com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage#getConf()
 * @model
 * @generated
 */
public interface Conf extends EObject
{
  /**
   * Returns the value of the '<em><b>Service</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Service</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Service</em>' reference.
   * @see #setService(Variable)
   * @see com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage#getConf_Service()
   * @model
   * @generated
   */
  Variable getService();

  /**
   * Sets the value of the '{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getService <em>Service</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Service</em>' reference.
   * @see #getService()
   * @generated
   */
  void setService(Variable value);

  /**
   * Returns the value of the '<em><b>Member</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Member</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Member</em>' reference.
   * @see #setMember(Operation)
   * @see com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage#getConf_Member()
   * @model
   * @generated
   */
  Operation getMember();

  /**
   * Sets the value of the '{@link com.aelos.xtext.mappingassistance.mappingAssistance.Conf#getMember <em>Member</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Member</em>' reference.
   * @see #getMember()
   * @generated
   */
  void setMember(Operation value);

  /**
   * Returns the value of the '<em><b>Var Conf</b></em>' reference list.
   * The list contents are of type {@link com.aelos.xtext.architecture.architecture.Variable}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Var Conf</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Var Conf</em>' reference list.
   * @see com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage#getConf_VarConf()
   * @model
   * @generated
   */
  EList<Variable> getVarConf();

  /**
   * Returns the value of the '<em><b>Inst Var</b></em>' containment reference list.
   * The list contents are of type {@link com.aelos.xtext.mappingassistance.mappingAssistance.Atomic}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Inst Var</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Inst Var</em>' containment reference list.
   * @see com.aelos.xtext.mappingassistance.mappingAssistance.MappingAssistancePackage#getConf_InstVar()
   * @model containment="true"
   * @generated
   */
  EList<Atomic> getInstVar();

} // Conf
