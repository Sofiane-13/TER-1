grammar com.aelos.xtext.architecture.Architecture with org.eclipse.xtext.common.Terminals

generate architecture "http://www.aelos.com/xtext/architecture/Architecture"

import "http://www.aelos.com/xtext/testintentionsassistance/TestintentionsAssistance" as testIntention

Model:
	package+=DomainDeclaration*;

DomainDeclaration:
    'domain' name=QualifiedName '{'
        (elements+=AbstractModel)*
    '}';

AbstractModel:Import? (comp+=Component )+ ;

Import:
    'import' importedNamespace=QualifiedNameWithWildcard;
    
QualifiedNameWithWildcard:
    QualifiedName '.*'?;
        
QualifiedName:
    ID ('.' ID)*;
    
Component :
	=> "Component:" inst+=InstanceComp":" => name=ID
	"ProvidedServices:"
	"conf("(arg+=Variable ",")*arg1+=Variable")"
	(methode+=ServiceName "("((arg+=Variable ",")*arg+=Variable)*")"(":"arg+=Variable)?)*
    "RequiredServices:"?
    (req+=RequiredService)*
	(bind+=Bindings)*
;

InstanceComp: name=ID;

Variable:
      name=ID ":" type=Type;
      

Bindings :
	"bind(" nameComp1+=[InstanceComp]'.'nameServ1+=[ServiceName] "," nameComp2+=[InstanceComp]'.'nameServ2+=[ServiceName] ")";
	  
RequiredService:
		nameVarMethode+=Variable":="nameComp+=[InstanceComp]'.'nameServ+=[ServiceName]";";

ServiceName : name=ID;


      
enum Type : INT | STRING | Boolean | Double;
