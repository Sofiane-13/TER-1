grammar com.aelos.xtext.architecture.Architecture with org.eclipse.xtext.common.Terminals

generate architecture "http://www.aelos.com/xtext/architecture/Architecture"

import "http://www.aelos.com/xtext/testintentionsassistance/TestintentionsAssistance" as testIntention

Model:
	package+=DomainDeclaration*;

DomainDeclaration:
    'domain' name=QualifiedName '{'
        (elements+=AbstractModel)*
    '}';

AbstractModel: (imp+=Import)* ((comp+=Component)+ | arch+=Architecture);

Import:
    'import' importedNamespace=QualifiedNameWithWildcard;
    
QualifiedNameWithWildcard:
    QualifiedName '.*'?;
        
QualifiedName:
    ID ('.' ID)*;
    
Component : 
	"Component:" name=ID "{"
		"providedServices" "(" ((ops+=[Operation] ",")*(ops+=[Operation]))* ")"
		"requeredServices" "(" ((opsReq+=[Operation] ",")*(opsReq+=[Operation]))* ")"
		->(operations+=Operation)*
		
		//(vars+=Variable)*
		//"requiredService" "(" ((calls+=Call ",")*(calls+=Call))* ")"
	"}"
;


Architecture:
	{Architecture} "ArchitectureDefinition"
	(vars+=Variable)*
	("bind"  receiver+=Call ":" provider+=Call)*
;

Call : receiver=[Variable]'.'member+=[Operation];  


Variable:
      name=ID ":" type=AtomicType;


Operation:
    "def" name=ID "("((arg+=Variable ",")*arg+=Variable)*")" ":" type= AtomicType
;

AtomicType:
	atomType=Type | 
	compType=[Component];
      
enum Type : INT | STRING | Boolean | Double;
