/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package com.aelos.xtext.architecture.architecture.impl;

import com.aelos.xtext.architecture.architecture.Architecture;
import com.aelos.xtext.architecture.architecture.ArchitecturePackage;
import com.aelos.xtext.architecture.architecture.Call;
import com.aelos.xtext.architecture.architecture.Variable;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Architecture</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ArchitectureImpl#getVars <em>Vars</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ArchitectureImpl#getReceiver <em>Receiver</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ArchitectureImpl#getProvider <em>Provider</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArchitectureImpl extends MinimalEObjectImpl.Container implements Architecture
{
  /**
   * The cached value of the '{@link #getVars() <em>Vars</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVars()
   * @generated
   * @ordered
   */
  protected EList<Variable> vars;

  /**
   * The cached value of the '{@link #getReceiver() <em>Receiver</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiver()
   * @generated
   * @ordered
   */
  protected EList<Call> receiver;

  /**
   * The cached value of the '{@link #getProvider() <em>Provider</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProvider()
   * @generated
   * @ordered
   */
  protected EList<Call> provider;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArchitectureImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArchitecturePackage.Literals.ARCHITECTURE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getVars()
  {
    if (vars == null)
    {
      vars = new EObjectContainmentEList<Variable>(Variable.class, this, ArchitecturePackage.ARCHITECTURE__VARS);
    }
    return vars;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Call> getReceiver()
  {
    if (receiver == null)
    {
      receiver = new EObjectContainmentEList<Call>(Call.class, this, ArchitecturePackage.ARCHITECTURE__RECEIVER);
    }
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Call> getProvider()
  {
    if (provider == null)
    {
      provider = new EObjectContainmentEList<Call>(Call.class, this, ArchitecturePackage.ARCHITECTURE__PROVIDER);
    }
    return provider;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArchitecturePackage.ARCHITECTURE__VARS:
        return ((InternalEList<?>)getVars()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.ARCHITECTURE__RECEIVER:
        return ((InternalEList<?>)getReceiver()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.ARCHITECTURE__PROVIDER:
        return ((InternalEList<?>)getProvider()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArchitecturePackage.ARCHITECTURE__VARS:
        return getVars();
      case ArchitecturePackage.ARCHITECTURE__RECEIVER:
        return getReceiver();
      case ArchitecturePackage.ARCHITECTURE__PROVIDER:
        return getProvider();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArchitecturePackage.ARCHITECTURE__VARS:
        getVars().clear();
        getVars().addAll((Collection<? extends Variable>)newValue);
        return;
      case ArchitecturePackage.ARCHITECTURE__RECEIVER:
        getReceiver().clear();
        getReceiver().addAll((Collection<? extends Call>)newValue);
        return;
      case ArchitecturePackage.ARCHITECTURE__PROVIDER:
        getProvider().clear();
        getProvider().addAll((Collection<? extends Call>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.ARCHITECTURE__VARS:
        getVars().clear();
        return;
      case ArchitecturePackage.ARCHITECTURE__RECEIVER:
        getReceiver().clear();
        return;
      case ArchitecturePackage.ARCHITECTURE__PROVIDER:
        getProvider().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.ARCHITECTURE__VARS:
        return vars != null && !vars.isEmpty();
      case ArchitecturePackage.ARCHITECTURE__RECEIVER:
        return receiver != null && !receiver.isEmpty();
      case ArchitecturePackage.ARCHITECTURE__PROVIDER:
        return provider != null && !provider.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ArchitectureImpl
