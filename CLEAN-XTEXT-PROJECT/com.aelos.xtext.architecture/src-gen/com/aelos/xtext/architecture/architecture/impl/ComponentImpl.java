/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package com.aelos.xtext.architecture.architecture.impl;

import com.aelos.xtext.architecture.architecture.ArchitecturePackage;
import com.aelos.xtext.architecture.architecture.Bindings;
import com.aelos.xtext.architecture.architecture.Component;
import com.aelos.xtext.architecture.architecture.InstanceComp;
import com.aelos.xtext.architecture.architecture.RequiredService;
import com.aelos.xtext.architecture.architecture.ServiceName;
import com.aelos.xtext.architecture.architecture.Variable;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getInst <em>Inst</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getArg <em>Arg</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getArg1 <em>Arg1</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getMethode <em>Methode</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getReq <em>Req</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.ComponentImpl#getBind <em>Bind</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentImpl extends MinimalEObjectImpl.Container implements Component
{
  /**
   * The cached value of the '{@link #getInst() <em>Inst</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInst()
   * @generated
   * @ordered
   */
  protected EList<InstanceComp> inst;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getArg() <em>Arg</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg()
   * @generated
   * @ordered
   */
  protected EList<Variable> arg;

  /**
   * The cached value of the '{@link #getArg1() <em>Arg1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg1()
   * @generated
   * @ordered
   */
  protected EList<Variable> arg1;

  /**
   * The cached value of the '{@link #getMethode() <em>Methode</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethode()
   * @generated
   * @ordered
   */
  protected EList<ServiceName> methode;

  /**
   * The cached value of the '{@link #getReq() <em>Req</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReq()
   * @generated
   * @ordered
   */
  protected EList<RequiredService> req;

  /**
   * The cached value of the '{@link #getBind() <em>Bind</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBind()
   * @generated
   * @ordered
   */
  protected EList<Bindings> bind;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArchitecturePackage.Literals.COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InstanceComp> getInst()
  {
    if (inst == null)
    {
      inst = new EObjectContainmentEList<InstanceComp>(InstanceComp.class, this, ArchitecturePackage.COMPONENT__INST);
    }
    return inst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchitecturePackage.COMPONENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getArg()
  {
    if (arg == null)
    {
      arg = new EObjectContainmentEList<Variable>(Variable.class, this, ArchitecturePackage.COMPONENT__ARG);
    }
    return arg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getArg1()
  {
    if (arg1 == null)
    {
      arg1 = new EObjectContainmentEList<Variable>(Variable.class, this, ArchitecturePackage.COMPONENT__ARG1);
    }
    return arg1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ServiceName> getMethode()
  {
    if (methode == null)
    {
      methode = new EObjectContainmentEList<ServiceName>(ServiceName.class, this, ArchitecturePackage.COMPONENT__METHODE);
    }
    return methode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<RequiredService> getReq()
  {
    if (req == null)
    {
      req = new EObjectContainmentEList<RequiredService>(RequiredService.class, this, ArchitecturePackage.COMPONENT__REQ);
    }
    return req;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Bindings> getBind()
  {
    if (bind == null)
    {
      bind = new EObjectContainmentEList<Bindings>(Bindings.class, this, ArchitecturePackage.COMPONENT__BIND);
    }
    return bind;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArchitecturePackage.COMPONENT__INST:
        return ((InternalEList<?>)getInst()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.COMPONENT__ARG:
        return ((InternalEList<?>)getArg()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.COMPONENT__ARG1:
        return ((InternalEList<?>)getArg1()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.COMPONENT__METHODE:
        return ((InternalEList<?>)getMethode()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.COMPONENT__REQ:
        return ((InternalEList<?>)getReq()).basicRemove(otherEnd, msgs);
      case ArchitecturePackage.COMPONENT__BIND:
        return ((InternalEList<?>)getBind()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArchitecturePackage.COMPONENT__INST:
        return getInst();
      case ArchitecturePackage.COMPONENT__NAME:
        return getName();
      case ArchitecturePackage.COMPONENT__ARG:
        return getArg();
      case ArchitecturePackage.COMPONENT__ARG1:
        return getArg1();
      case ArchitecturePackage.COMPONENT__METHODE:
        return getMethode();
      case ArchitecturePackage.COMPONENT__REQ:
        return getReq();
      case ArchitecturePackage.COMPONENT__BIND:
        return getBind();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArchitecturePackage.COMPONENT__INST:
        getInst().clear();
        getInst().addAll((Collection<? extends InstanceComp>)newValue);
        return;
      case ArchitecturePackage.COMPONENT__NAME:
        setName((String)newValue);
        return;
      case ArchitecturePackage.COMPONENT__ARG:
        getArg().clear();
        getArg().addAll((Collection<? extends Variable>)newValue);
        return;
      case ArchitecturePackage.COMPONENT__ARG1:
        getArg1().clear();
        getArg1().addAll((Collection<? extends Variable>)newValue);
        return;
      case ArchitecturePackage.COMPONENT__METHODE:
        getMethode().clear();
        getMethode().addAll((Collection<? extends ServiceName>)newValue);
        return;
      case ArchitecturePackage.COMPONENT__REQ:
        getReq().clear();
        getReq().addAll((Collection<? extends RequiredService>)newValue);
        return;
      case ArchitecturePackage.COMPONENT__BIND:
        getBind().clear();
        getBind().addAll((Collection<? extends Bindings>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.COMPONENT__INST:
        getInst().clear();
        return;
      case ArchitecturePackage.COMPONENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ArchitecturePackage.COMPONENT__ARG:
        getArg().clear();
        return;
      case ArchitecturePackage.COMPONENT__ARG1:
        getArg1().clear();
        return;
      case ArchitecturePackage.COMPONENT__METHODE:
        getMethode().clear();
        return;
      case ArchitecturePackage.COMPONENT__REQ:
        getReq().clear();
        return;
      case ArchitecturePackage.COMPONENT__BIND:
        getBind().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.COMPONENT__INST:
        return inst != null && !inst.isEmpty();
      case ArchitecturePackage.COMPONENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ArchitecturePackage.COMPONENT__ARG:
        return arg != null && !arg.isEmpty();
      case ArchitecturePackage.COMPONENT__ARG1:
        return arg1 != null && !arg1.isEmpty();
      case ArchitecturePackage.COMPONENT__METHODE:
        return methode != null && !methode.isEmpty();
      case ArchitecturePackage.COMPONENT__REQ:
        return req != null && !req.isEmpty();
      case ArchitecturePackage.COMPONENT__BIND:
        return bind != null && !bind.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ComponentImpl
