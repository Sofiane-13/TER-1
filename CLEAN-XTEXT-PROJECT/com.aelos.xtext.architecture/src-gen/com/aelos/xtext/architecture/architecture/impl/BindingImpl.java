/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package com.aelos.xtext.architecture.architecture.impl;

import com.aelos.xtext.architecture.architecture.ArchitecturePackage;
import com.aelos.xtext.architecture.architecture.Binding;
import com.aelos.xtext.architecture.architecture.Operation;
import com.aelos.xtext.architecture.architecture.Variable;

import java.util.Collection;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Binding</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.BindingImpl#getReceiver <em>Receiver</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.BindingImpl#getRecMember <em>Rec Member</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.BindingImpl#getProvider <em>Provider</em>}</li>
 *   <li>{@link com.aelos.xtext.architecture.architecture.impl.BindingImpl#getProMember <em>Pro Member</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BindingImpl extends MinimalEObjectImpl.Container implements Binding
{
  /**
   * The cached value of the '{@link #getReceiver() <em>Receiver</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiver()
   * @generated
   * @ordered
   */
  protected EList<Variable> receiver;

  /**
   * The cached value of the '{@link #getRecMember() <em>Rec Member</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecMember()
   * @generated
   * @ordered
   */
  protected EList<Operation> recMember;

  /**
   * The cached value of the '{@link #getProvider() <em>Provider</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProvider()
   * @generated
   * @ordered
   */
  protected EList<Variable> provider;

  /**
   * The cached value of the '{@link #getProMember() <em>Pro Member</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProMember()
   * @generated
   * @ordered
   */
  protected EList<Operation> proMember;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BindingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArchitecturePackage.Literals.BINDING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getReceiver()
  {
    if (receiver == null)
    {
      receiver = new EObjectResolvingEList<Variable>(Variable.class, this, ArchitecturePackage.BINDING__RECEIVER);
    }
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Operation> getRecMember()
  {
    if (recMember == null)
    {
      recMember = new EObjectResolvingEList<Operation>(Operation.class, this, ArchitecturePackage.BINDING__REC_MEMBER);
    }
    return recMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Variable> getProvider()
  {
    if (provider == null)
    {
      provider = new EObjectResolvingEList<Variable>(Variable.class, this, ArchitecturePackage.BINDING__PROVIDER);
    }
    return provider;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Operation> getProMember()
  {
    if (proMember == null)
    {
      proMember = new EObjectResolvingEList<Operation>(Operation.class, this, ArchitecturePackage.BINDING__PRO_MEMBER);
    }
    return proMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArchitecturePackage.BINDING__RECEIVER:
        return getReceiver();
      case ArchitecturePackage.BINDING__REC_MEMBER:
        return getRecMember();
      case ArchitecturePackage.BINDING__PROVIDER:
        return getProvider();
      case ArchitecturePackage.BINDING__PRO_MEMBER:
        return getProMember();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArchitecturePackage.BINDING__RECEIVER:
        getReceiver().clear();
        getReceiver().addAll((Collection<? extends Variable>)newValue);
        return;
      case ArchitecturePackage.BINDING__REC_MEMBER:
        getRecMember().clear();
        getRecMember().addAll((Collection<? extends Operation>)newValue);
        return;
      case ArchitecturePackage.BINDING__PROVIDER:
        getProvider().clear();
        getProvider().addAll((Collection<? extends Variable>)newValue);
        return;
      case ArchitecturePackage.BINDING__PRO_MEMBER:
        getProMember().clear();
        getProMember().addAll((Collection<? extends Operation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.BINDING__RECEIVER:
        getReceiver().clear();
        return;
      case ArchitecturePackage.BINDING__REC_MEMBER:
        getRecMember().clear();
        return;
      case ArchitecturePackage.BINDING__PROVIDER:
        getProvider().clear();
        return;
      case ArchitecturePackage.BINDING__PRO_MEMBER:
        getProMember().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArchitecturePackage.BINDING__RECEIVER:
        return receiver != null && !receiver.isEmpty();
      case ArchitecturePackage.BINDING__REC_MEMBER:
        return recMember != null && !recMember.isEmpty();
      case ArchitecturePackage.BINDING__PROVIDER:
        return provider != null && !provider.isEmpty();
      case ArchitecturePackage.BINDING__PRO_MEMBER:
        return proMember != null && !proMember.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BindingImpl
